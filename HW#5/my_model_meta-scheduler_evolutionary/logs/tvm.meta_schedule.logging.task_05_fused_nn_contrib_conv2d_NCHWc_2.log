2023-02-16 14:18:36 [INFO] [task_scheduler.cc:158] Initializing Task #5: "fused_nn_contrib_conv2d_NCHWc_2"
2023-02-16 14:18:36 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 56, 56, 256), "float32"], p1: T.Buffer[(8, 1, 1, 1, 256, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 8, 28, 28, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        for i0, i1, i2, i3, i4, i5, i6, i7 in T.grid(1, 8, 28, 28, 64, 256, 1, 1):
            with T.block("conv2d_NCHWc"):
                n, oc_chunk, oh, ow, oc_block, ic, kh, kw = T.axis.remap("SSSSSRRR", [i0, i1, i2, i3, i4, i5, i6, i7])
                T.reads(p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256], p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block])
                T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                with T.init():
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256] * p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block]
    

2023-02-16 14:18:36 [INFO] [task_scheduler.cc:162] Total 3 design space(s) generated
2023-02-16 14:18:36 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 56, 56, 256), "float32"], p1: T.Buffer[(8, 1, 1, 1, 256, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 8, 28, 28, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":0, "meta_schedule.vectorize":64})
            conv2d_NCHWc_global = T.alloc_buffer([1, 8, 28, 28, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1 in T.grid(1, 4, 2, 1, 1, 1, 1, 2, 4, 4):
                for i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(256, 1, 1, 1, 2, 7, 7, 8, 1, 1, 1, 1, 1, 1, 1, 2):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(8, i1_3 + i1_0 * 2 + i1_1 * 2 + i1_2)
                        oh = T.axis.spatial(28, i2_0 * 14 + i2_1 * 7 + i2_2 + i2_3)
                        ow = T.axis.spatial(28, i3_3 + i3_0 * 28 + i3_1 * 7 + i3_2)
                        oc_block = T.axis.spatial(64, i4_0 * 64 + i4_1 * 16 + i4_2 * 2 + i4_3)
                        ic = T.axis.reduce(256, i5_1 + i5_0)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256], p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block])
                        T.writes(conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256] * p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 2, 7, 7, 16):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(1, ax0)
                        v1 = T.axis.spatial(8, i1_0 * 2 + ax1)
                        v2 = T.axis.spatial(28, i2_0 * 14 + i2_1 * 7 + ax2)
                        v3 = T.axis.spatial(28, i3_1 * 7 + ax3)
                        v4 = T.axis.spatial(64, i4_1 * 16 + ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 1, 2, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 8, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2023-02-16 14:18:36 [INFO] [task_scheduler.cc:168] Design space #1:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 56, 56, 256), "float32"], p1: T.Buffer[(8, 1, 1, 1, 256, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 8, 28, 28, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":64, "meta_schedule.vectorize":64})
            conv2d_NCHWc_global = T.alloc_buffer([1, 8, 28, 28, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0 in T.grid(1, 4, 2, 1, 1):
                for i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 1, 2, 4, 4, 256, 1, 1, 1, 2, 7, 7, 8, 1, 1, 1, 1, 1, 1, 1, 2):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(8, i1_3 + i1_0 * 2 + i1_1 * 2 + i1_2)
                        oh = T.axis.spatial(28, i2_0 * 14 + i2_1 * 7 + i2_2 + i2_3)
                        ow = T.axis.spatial(28, i3_3 + i3_0 * 28 + i3_1 * 7 + i3_2)
                        oc_block = T.axis.spatial(64, i4_0 * 64 + i4_1 * 16 + i4_2 * 2 + i4_3)
                        ic = T.axis.reduce(256, i5_1 + i5_0)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256], p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block])
                        T.writes(conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256] * p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 2, 14, 28, 64):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(1, ax0)
                        v1 = T.axis.spatial(8, i1_0 * 2 + ax1)
                        v2 = T.axis.spatial(28, i2_0 * 14 + ax2)
                        v3, v4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 1, 2, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 8, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2023-02-16 14:18:36 [INFO] [task_scheduler.cc:168] Design space #2:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 56, 56, 256), "float32"], p1: T.Buffer[(8, 1, 1, 1, 256, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 8, 28, 28, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":0, "meta_schedule.vectorize":64})
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 4, 2, 1, 1, 1, 1, 2, 4, 4, 256, 1, 1, 1, 2, 7, 7, 8, 1, 1, 1, 1, 1, 1, 1, 2):
                with T.block("conv2d_NCHWc"):
                    n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                    oc_chunk = T.axis.spatial(8, i1_3 + i1_0 * 2 + i1_1 * 2 + i1_2)
                    oh = T.axis.spatial(28, i2_0 * 14 + i2_1 * 7 + i2_2 + i2_3)
                    ow = T.axis.spatial(28, i3_3 + i3_0 * 28 + i3_1 * 7 + i3_2)
                    oc_block = T.axis.spatial(64, i4_0 * 64 + i4_1 * 16 + i4_2 * 2 + i4_3)
                    ic = T.axis.reduce(256, i5_1 + i5_0)
                    kh = T.axis.reduce(1, i6_0 + i6_1)
                    kw = T.axis.reduce(1, i7_1 + i7_0)
                    T.reads(p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256], p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block])
                    T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                    T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256] * p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 1, 2, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 8, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2023-02-16 14:20:37 [INFO] [task_scheduler.cc:158] Initializing Task #5: "fused_nn_contrib_conv2d_NCHWc_2"
2023-02-16 14:20:37 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 56, 56, 256), "float32"], p1: T.Buffer[(8, 1, 1, 1, 256, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 8, 28, 28, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        for i0, i1, i2, i3, i4, i5, i6, i7 in T.grid(1, 8, 28, 28, 64, 256, 1, 1):
            with T.block("conv2d_NCHWc"):
                n, oc_chunk, oh, ow, oc_block, ic, kh, kw = T.axis.remap("SSSSSRRR", [i0, i1, i2, i3, i4, i5, i6, i7])
                T.reads(p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256], p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block])
                T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                with T.init():
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256] * p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block]
    

2023-02-16 14:20:37 [INFO] [task_scheduler.cc:162] Total 3 design space(s) generated
2023-02-16 14:20:37 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 56, 56, 256), "float32"], p1: T.Buffer[(8, 1, 1, 1, 256, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 8, 28, 28, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":0, "meta_schedule.vectorize":64})
            conv2d_NCHWc_global = T.alloc_buffer([1, 8, 28, 28, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1 in T.grid(1, 4, 2, 4, 4, 1, 1, 7, 7, 2):
                for i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(4, 1, 1, 1, 1, 2, 1, 2, 64, 1, 1, 1, 2, 1, 1, 4):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(8, i1_0 * 2 + i1_1 * 2 + i1_2 * 2 + i1_3)
                        oh = T.axis.spatial(28, i2_0 * 14 + i2_1 * 2 + i2_2 + i2_3)
                        ow = T.axis.spatial(28, i3_3 + i3_0 * 7 + i3_1 + i3_2)
                        oc_block = T.axis.spatial(64, i4_0 * 16 + i4_1 * 8 + i4_2 * 4 + i4_3)
                        ic = T.axis.reduce(256, i5_0 * 64 + i5_1)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256], p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block])
                        T.writes(conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256] * p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 2, 2, 1, 8):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(1, ax0)
                        v1 = T.axis.spatial(8, i1_0 * 2 + ax1)
                        v2 = T.axis.spatial(28, i2_0 * 14 + i2_1 * 2 + ax2)
                        v3 = T.axis.spatial(28, i3_0 * 7 + i3_1 + ax3)
                        v4 = T.axis.spatial(64, i4_0 * 16 + i4_1 * 8 + ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 1, 1, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 7, 2, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 2, 2, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[4, 64])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2023-02-16 14:20:37 [INFO] [task_scheduler.cc:168] Design space #1:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 56, 56, 256), "float32"], p1: T.Buffer[(8, 1, 1, 1, 256, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 8, 28, 28, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":64, "meta_schedule.vectorize":64})
            conv2d_NCHWc_global = T.alloc_buffer([1, 8, 28, 28, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0 in T.grid(1, 4, 2, 4, 4):
                for i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 1, 7, 7, 2, 4, 1, 1, 1, 1, 2, 1, 2, 64, 1, 1, 1, 2, 1, 1, 4):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(8, i1_0 * 2 + i1_1 * 2 + i1_2 * 2 + i1_3)
                        oh = T.axis.spatial(28, i2_0 * 14 + i2_1 * 2 + i2_2 + i2_3)
                        ow = T.axis.spatial(28, i3_3 + i3_0 * 7 + i3_1 + i3_2)
                        oc_block = T.axis.spatial(64, i4_0 * 16 + i4_1 * 8 + i4_2 * 4 + i4_3)
                        ic = T.axis.reduce(256, i5_0 * 64 + i5_1)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256], p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block])
                        T.writes(conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256] * p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 2, 14, 7, 16):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(1, ax0)
                        v1 = T.axis.spatial(8, i1_0 * 2 + ax1)
                        v2 = T.axis.spatial(28, i2_0 * 14 + ax2)
                        v3 = T.axis.spatial(28, i3_0 * 7 + ax3)
                        v4 = T.axis.spatial(64, i4_0 * 16 + ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 1, 1, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 7, 2, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 2, 2, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[4, 64])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2023-02-16 14:20:37 [INFO] [task_scheduler.cc:168] Design space #2:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 56, 56, 256), "float32"], p1: T.Buffer[(8, 1, 1, 1, 256, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 8, 28, 28, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":16, "meta_schedule.vectorize":64})
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 4, 2, 4, 4, 1, 1, 7, 7, 2, 4, 1, 1, 1, 1, 2, 1, 2, 64, 1, 1, 1, 2, 1, 1, 4):
                with T.block("conv2d_NCHWc"):
                    n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                    oc_chunk = T.axis.spatial(8, i1_0 * 2 + i1_1 * 2 + i1_2 * 2 + i1_3)
                    oh = T.axis.spatial(28, i2_0 * 14 + i2_1 * 2 + i2_2 + i2_3)
                    ow = T.axis.spatial(28, i3_3 + i3_0 * 7 + i3_1 + i3_2)
                    oc_block = T.axis.spatial(64, i4_0 * 16 + i4_1 * 8 + i4_2 * 4 + i4_3)
                    ic = T.axis.reduce(256, i5_0 * 64 + i5_1)
                    kh = T.axis.reduce(1, i6_0 + i6_1)
                    kw = T.axis.reduce(1, i7_1 + i7_0)
                    T.reads(p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256], p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block])
                    T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                    T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 256, oh * 2 + kh, ow * 2 + kw, ic % 256] * p1[oc_chunk, ic // 256, kh, kw, ic % 256, oc_block]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 1, 1, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 7, 2, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 2, 2, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[4, 64])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2023-02-16 14:25:22 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-02-16 14:25:22 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2023-02-16 14:25:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x20d121e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x207f9fc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2fb994d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2144deb8)]: 0 failure(s)
2023-02-16 14:25:22 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2023-02-16 14:25:23 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x20d121e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x207f9fc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2fb994d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2144deb8)]: 0 failure(s)
2023-02-16 14:25:24 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x20d121e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x207f9fc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2fb994d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2144deb8)]: 0 failure(s)
2023-02-16 14:25:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x20d121e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x207f9fc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2fb994d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2144deb8)]: 0 failure(s)
2023-02-16 14:25:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x20d121e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x207f9fc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2fb994d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2144deb8)]: 0 failure(s)
2023-02-16 14:25:26 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9997  0.9996  0.9994  0.9993  0.9992  0.9987  0.9978  0.9977  0.9968  0.9964  0.9958  0.9958  0.9957  0.9951  0.9951  0.9944
[17 : 32]:	0.9941  0.9937  0.9925  0.9909  0.9901  0.9895  0.9892  0.9882  0.9874  0.9873  0.9869  0.9862  0.9852  0.9851  0.9850  0.9849
[33 : 48]:	0.9840  0.9825  0.9823  0.9818  0.9815  0.9804  0.9802  0.9800  0.9797  0.9793  0.9786  0.9783  0.9778  0.9777  0.9772  0.9766
[49 : 64]:	0.9764  0.9757  0.9757  0.9755  0.9743  0.9741  0.9741  0.9737  0.9735  0.9734  0.9733  0.9730  0.9724  0.9723  0.9718  0.9716
2023-02-16 14:25:26 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2023-02-16 14:25:26 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #1: GFLOPs: 59.1501. Time: 3474.5683 us. Best GFLOPs: 59.1501
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #2: GFLOPs: 97.9193. Time: 2098.8808 us. Best GFLOPs: 97.9193
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #3: GFLOPs: 29.2213. Time: 7033.2520 us. Best GFLOPs: 97.9193
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #4: GFLOPs: 89.8017. Time: 2288.6079 us. Best GFLOPs: 97.9193
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #5: GFLOPs: 24.9270. Time: 8244.9130 us. Best GFLOPs: 97.9193
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #6: GFLOPs: 6.6725. Time: 30801.3789 us. Best GFLOPs: 97.9193
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #7: GFLOPs: 25.3041. Time: 8122.0535 us. Best GFLOPs: 97.9193
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #8: GFLOPs: 93.1788. Time: 2205.6626 us. Best GFLOPs: 97.9193
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #9: GFLOPs: 42.0807. Time: 4883.9666 us. Best GFLOPs: 97.9193
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #10: GFLOPs: 51.6853. Time: 3976.3880 us. Best GFLOPs: 97.9193
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #11: GFLOPs: 69.3300. Time: 2964.3859 us. Best GFLOPs: 97.9193
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #12: GFLOPs: 108.6437. Time: 1891.6956 us. Best GFLOPs: 108.6437
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #13: GFLOPs: 30.4156. Time: 6757.0972 us. Best GFLOPs: 108.6437
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #14: GFLOPs: 34.4875. Time: 5959.2848 us. Best GFLOPs: 108.6437
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #15: GFLOPs: 5.8802. Time: 34951.6072 us. Best GFLOPs: 108.6437
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #16: GFLOPs: 11.7428. Time: 17501.8288 us. Best GFLOPs: 108.6437
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #17: GFLOPs: 77.6139. Time: 2647.9909 us. Best GFLOPs: 108.6437
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #18: GFLOPs: 33.7460. Time: 6090.2327 us. Best GFLOPs: 108.6437
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #19: GFLOPs: 160.0937. Time: 1283.7535 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #20: GFLOPs: 13.9745. Time: 14706.8282 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #21: GFLOPs: 17.1568. Time: 11978.9724 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #22: GFLOPs: 6.2261. Time: 33009.6031 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #23: GFLOPs: 10.3915. Time: 19777.7938 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #24: GFLOPs: 76.6892. Time: 2679.9191 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #25: GFLOPs: 19.5499. Time: 10512.6546 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #26: GFLOPs: 7.9537. Time: 25839.6143 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #27: GFLOPs: 33.6650. Time: 6104.8763 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #28: GFLOPs: 19.2678. Time: 10666.5320 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #29: GFLOPs: 35.4433. Time: 5798.5835 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #30: GFLOPs: 26.0674. Time: 7884.2201 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #31: GFLOPs: 111.4646. Time: 1843.8220 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #32: GFLOPs: 54.3800. Time: 3779.3441 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #33: GFLOPs: 24.1598. Time: 8506.7396 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #34: GFLOPs: 9.1363. Time: 22495.0774 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #35: GFLOPs: 56.7472. Time: 3621.6933 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #36: GFLOPs: 27.1075. Time: 7581.7073 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #37: GFLOPs: 125.7517. Time: 1634.3384 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #38: GFLOPs: 22.8917. Time: 8977.9579 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #39: GFLOPs: 23.2391. Time: 8843.7560 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #40: GFLOPs: 31.7529. Time: 6472.5091 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #41: GFLOPs: 45.3603. Time: 4530.8547 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #42: GFLOPs: 20.7773. Time: 9891.6079 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #43: GFLOPs: 80.0105. Time: 2568.6731 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #44: GFLOPs: 52.2612. Time: 3932.5741 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #45: GFLOPs: 6.3839. Time: 32193.7419 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #46: GFLOPs: 22.6737. Time: 9064.2734 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #47: GFLOPs: 10.2786. Time: 19995.1094 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #48: GFLOPs: 14.9719. Time: 13727.0787 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #49: GFLOPs: 70.3731. Time: 2920.4456 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #50: GFLOPs: 30.8345. Time: 6665.2950 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #51: GFLOPs: 28.5631. Time: 7195.3309 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #52: GFLOPs: 31.8271. Time: 6457.4081 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #53: GFLOPs: 7.1505. Time: 28742.1333 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #54: GFLOPs: 19.1637. Time: 10724.5156 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #55: GFLOPs: 7.7771. Time: 26426.5469 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #56: GFLOPs: 74.2013. Time: 2769.7735 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #57: GFLOPs: 59.2213. Time: 3470.3905 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #58: GFLOPs: 12.6084. Time: 16300.2898 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #59: GFLOPs: 109.2987. Time: 1880.3598 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #60: GFLOPs: 21.9445. Time: 9365.4790 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #61: GFLOPs: 18.2199. Time: 11280.0032 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #62: GFLOPs: 60.2569. Time: 3410.7434 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #63: GFLOPs: 18.4672. Time: 11128.9474 us. Best GFLOPs: 160.0937
2023-02-16 15:36:13 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #64: GFLOPs: 5.9976. Time: 34267.4647 us. Best GFLOPs: 160.0937
2023-02-16 16:13:58 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-02-16 16:13:58 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2023-02-16 16:13:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x20d121e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x207f9fc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2fb994d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2144deb8)]: 0 failure(s)
2023-02-16 16:13:59 [INFO] [evolutionary_search.cc:723] Sampled 448 candidate(s)
2023-02-16 16:14:01 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x20d121e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x207f9fc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2fb994d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2144deb8)]: 0 failure(s)
2023-02-16 16:14:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x20d121e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x207f9fc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2fb994d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2144deb8)]: 0 failure(s)
2023-02-16 16:14:04 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x20d121e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x207f9fc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2fb994d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2144deb8)]: 0 failure(s)
2023-02-16 16:14:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x20d121e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x207f9fc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2fb994d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2144deb8)]: 0 failure(s)
2023-02-16 16:14:08 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9399  0.9246  0.9171  0.9065  0.8917  0.8540  0.8519  0.8459  0.8459  0.8425  0.8423  0.8409  0.8402  0.8398  0.8396  0.8392
[17 : 32]:	0.8370  0.8350  0.8346  0.8322  0.8288  0.8285  0.8240  0.8197  0.8193  0.8192  0.8192  0.8191  0.8175  0.8110  0.8082  0.8077
[33 : 48]:	0.8068  0.8062  0.8057  0.8057  0.8056  0.8029  0.8024  0.8021  0.8016  0.8005  0.8003  0.7990  0.7990  0.7971  0.7966  0.7959
[49 : 64]:	0.7947  0.7937  0.7937  0.7935  0.7929  0.7928  0.7919  0.7886  0.7886  0.7869  0.7865  0.7860  0.7839  0.7838  0.7827  0.7823
2023-02-16 16:14:08 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2023-02-16 16:14:08 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2023-02-16 16:16:25 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #65: GFLOPs: 124.0798. Time: 1656.3612 us. Best GFLOPs: 160.0937
2023-02-16 16:16:25 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #66: GFLOPs: 160.4291. Time: 1281.0697 us. Best GFLOPs: 160.4291
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #67: GFLOPs: 170.8626. Time: 1202.8433 us. Best GFLOPs: 170.8626
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #68: GFLOPs: 165.8793. Time: 1238.9789 us. Best GFLOPs: 170.8626
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #69: GFLOPs: 151.0820. Time: 1360.3270 us. Best GFLOPs: 170.8626
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #70: GFLOPs: 180.7015. Time: 1137.3500 us. Best GFLOPs: 180.7015
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #71: GFLOPs: 179.6993. Time: 1143.6937 us. Best GFLOPs: 180.7015
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #72: GFLOPs: 130.4115. Time: 1575.9411 us. Best GFLOPs: 180.7015
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #73: GFLOPs: 177.2980. Time: 1159.1833 us. Best GFLOPs: 180.7015
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #74: GFLOPs: 130.3619. Time: 1576.5417 us. Best GFLOPs: 180.7015
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #75: GFLOPs: 158.9610. Time: 1292.9016 us. Best GFLOPs: 180.7015
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #76: GFLOPs: 235.7466. Time: 871.7875 us. Best GFLOPs: 235.7466
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #77: GFLOPs: 212.5983. Time: 966.7100 us. Best GFLOPs: 235.7466
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #78: GFLOPs: 181.3221. Time: 1133.4576 us. Best GFLOPs: 235.7466
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #79: GFLOPs: 105.1020. Time: 1955.4431 us. Best GFLOPs: 235.7466
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #80: GFLOPs: 239.5720. Time: 857.8671 us. Best GFLOPs: 239.5720
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #81: GFLOPs: 240.0105. Time: 856.2997 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #82: GFLOPs: 158.6308. Time: 1295.5928 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #83: GFLOPs: 92.3437. Time: 2225.6089 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #84: GFLOPs: 167.7280. Time: 1225.3227 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #85: GFLOPs: 203.9178. Time: 1007.8616 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #86: GFLOPs: 162.6006. Time: 1263.9616 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #87: GFLOPs: 147.2789. Time: 1395.4533 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #88: GFLOPs: 218.6750. Time: 939.8462 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #89: GFLOPs: 149.7346. Time: 1372.5675 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #90: GFLOPs: 132.3633. Time: 1552.7036 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #91: GFLOPs: 118.6034. Time: 1732.8416 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #92: GFLOPs: 69.0188. Time: 2977.7545 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #93: GFLOPs: 173.8875. Time: 1181.9189 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #94: GFLOPs: 132.1944. Time: 1554.6868 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #95: GFLOPs: 150.7141. Time: 1363.6473 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #96: GFLOPs: 172.9046. Time: 1188.6378 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #97: GFLOPs: 166.1769. Time: 1236.7596 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #98: GFLOPs: 120.4753. Time: 1705.9167 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #99: GFLOPs: 156.0248. Time: 1317.2322 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #100: GFLOPs: 133.5917. Time: 1538.4259 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #101: GFLOPs: 114.8090. Time: 1790.1110 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #102: GFLOPs: 144.2697. Time: 1424.5599 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #103: GFLOPs: 169.4273. Time: 1213.0328 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #104: GFLOPs: 65.0311. Time: 3160.3459 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #105: GFLOPs: 127.4072. Time: 1613.1024 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #106: GFLOPs: 238.4617. Time: 861.8612 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #107: GFLOPs: 87.1589. Time: 2358.0024 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #108: GFLOPs: 124.3702. Time: 1652.4925 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #109: GFLOPs: 93.5837. Time: 2196.1191 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #110: GFLOPs: 41.9664. Time: 4897.2770 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #111: GFLOPs: 98.8105. Time: 2079.9498 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #112: GFLOPs: 87.2030. Time: 2356.8111 us. Best GFLOPs: 240.0105
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #113: GFLOPs: 251.1362. Time: 818.3643 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #114: GFLOPs: 157.2656. Time: 1306.8393 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #115: GFLOPs: 156.8552. Time: 1310.2588 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #116: GFLOPs: 177.3179. Time: 1159.0531 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #117: GFLOPs: 103.1328. Time: 1992.7789 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #118: GFLOPs: 147.7538. Time: 1390.9687 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #119: GFLOPs: 91.6701. Time: 2241.9630 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #120: GFLOPs: 161.9493. Time: 1269.0446 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #121: GFLOPs: 165.3658. Time: 1242.8259 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #122: GFLOPs: 145.5207. Time: 1412.3141 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #123: GFLOPs: 75.7514. Time: 2713.0979 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #124: GFLOPs: 173.1217. Time: 1187.1466 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #125: GFLOPs: 160.6843. Time: 1279.0355 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #126: GFLOPs: 52.6582. Time: 3902.9231 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #127: GFLOPs: 29.2694. Time: 7021.7027 us. Best GFLOPs: 251.1362
2023-02-16 16:16:26 [INFO] [task_scheduler.cc:129] [Task #5: fused_nn_contrib_conv2d_NCHWc_2] Trial #128: GFLOPs: 68.1005. Time: 3017.9050 us. Best GFLOPs: 251.1362
