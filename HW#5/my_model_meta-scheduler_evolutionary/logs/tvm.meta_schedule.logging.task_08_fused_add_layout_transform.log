2023-02-16 14:18:36 [INFO] [task_scheduler.cc:158] Initializing Task #8: "fused_add_layout_transform"
2023-02-16 14:18:36 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 3, 224, 224), "float32"], p1: T.Buffer[(3, 1, 1), "float32"], T_layout_trans: T.Buffer[(1, 1, 224, 224, 3), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        T_add = T.alloc_buffer([1, 3, 224, 224], dtype="float32")
        for i0, i1, i2, i3 in T.grid(1, 3, 224, 224):
            with T.block("T_add"):
                ax0, ax1, ax2, ax3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[ax0, ax1, ax2, ax3], p1[ax1, 0, 0])
                T.writes(T_add[ax0, ax1, ax2, ax3])
                T_add[ax0, ax1, ax2, ax3] = p0[ax0, ax1, ax2, ax3] + p1[ax1, 0, 0]
        for i0, i1, i2, i3, i4 in T.grid(1, 1, 224, 224, 3):
            with T.block("T_layout_trans"):
                ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(T_add[ax0, ax1 * 3 + ax4, ax2, ax3])
                T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 3 + ax4 < 3 and ax2 < 224 and ax3 < 224, T_add[ax0, ax1 * 3 + ax4, ax2, ax3], T.float32(0), dtype="float32")
    

2023-02-16 14:18:36 [INFO] [task_scheduler.cc:162] Total 1 design space(s) generated
2023-02-16 14:18:36 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 3, 224, 224), "float32"], p1: T.Buffer[(3, 1, 1), "float32"], T_layout_trans: T.Buffer[(1, 1, 224, 224, 3), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.vectorize":64})
            for i0, i1, i2, i3, i4 in T.grid(1, 1, 224, 224, 3):
                with T.block("T_layout_trans"):
                    ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(p0[ax0, ax1 * 3 + ax4, ax2, ax3], p1[ax1 * 3 + ax4, 0, 0])
                    T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                    T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 3 + ax4 < 3 and ax2 < 224 and ax3 < 224, p0[ax0, ax1 * 3 + ax4, ax2, ax3] + p1[ax1 * 3 + ax4, 0, 0], T.float32(0), dtype="float32")
    

b0 = sch.get_block(name="T_add", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
2023-02-16 14:20:37 [INFO] [task_scheduler.cc:158] Initializing Task #8: "fused_add_layout_transform"
2023-02-16 14:20:37 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 3, 224, 224), "float32"], p1: T.Buffer[(3, 1, 1), "float32"], T_layout_trans: T.Buffer[(1, 1, 224, 224, 3), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        T_add = T.alloc_buffer([1, 3, 224, 224], dtype="float32")
        for i0, i1, i2, i3 in T.grid(1, 3, 224, 224):
            with T.block("T_add"):
                ax0, ax1, ax2, ax3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[ax0, ax1, ax2, ax3], p1[ax1, 0, 0])
                T.writes(T_add[ax0, ax1, ax2, ax3])
                T_add[ax0, ax1, ax2, ax3] = p0[ax0, ax1, ax2, ax3] + p1[ax1, 0, 0]
        for i0, i1, i2, i3, i4 in T.grid(1, 1, 224, 224, 3):
            with T.block("T_layout_trans"):
                ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(T_add[ax0, ax1 * 3 + ax4, ax2, ax3])
                T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 3 + ax4 < 3 and ax2 < 224 and ax3 < 224, T_add[ax0, ax1 * 3 + ax4, ax2, ax3], T.float32(0), dtype="float32")
    

2023-02-16 14:20:37 [INFO] [task_scheduler.cc:162] Total 1 design space(s) generated
2023-02-16 14:20:37 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 3, 224, 224), "float32"], p1: T.Buffer[(3, 1, 1), "float32"], T_layout_trans: T.Buffer[(1, 1, 224, 224, 3), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.vectorize":64})
            for i0, i1, i2, i3, i4 in T.grid(1, 1, 224, 224, 3):
                with T.block("T_layout_trans"):
                    ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(p0[ax0, ax1 * 3 + ax4, ax2, ax3], p1[ax1 * 3 + ax4, 0, 0])
                    T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                    T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 3 + ax4 < 3 and ax2 < 224 and ax3 < 224, p0[ax0, ax1 * 3 + ax4, ax2, ax3] + p1[ax1 * 3 + ax4, 0, 0], T.float32(0), dtype="float32")
    

b0 = sch.get_block(name="T_add", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
2023-02-16 14:30:09 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-02-16 14:30:09 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2023-02-16 14:30:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x349869d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x96a50e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x301f2818)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2763c778)]: 0 failure(s)
2023-02-16 14:30:09 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2023-02-16 14:30:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x349869d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x96a50e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x301f2818)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2763c778)]: 0 failure(s)
2023-02-16 14:30:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x349869d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x96a50e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x301f2818)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2763c778)]: 0 failure(s)
2023-02-16 14:30:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x349869d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x96a50e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x301f2818)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2763c778)]: 0 failure(s)
2023-02-16 14:30:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x349869d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x96a50e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x301f2818)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2763c778)]: 0 failure(s)
2023-02-16 14:30:10 [INFO] [evolutionary_search.cc:649] Scores of the best 1 candidates:
[1 : 1]:	0.5692
2023-02-16 14:30:10 [INFO] [evolutionary_search.cc:727] Got 1 candidate(s) with evolutionary search
2023-02-16 14:30:10 [INFO] [evolutionary_search.cc:730] Sending 1 candidates(s) for measurement
2023-02-16 15:36:15 [INFO] [task_scheduler.cc:129] [Task #8: fused_add_layout_transform] Trial #1: GFLOPs: 8.5724. Time: 17.5597 us. Best GFLOPs: 8.5724
