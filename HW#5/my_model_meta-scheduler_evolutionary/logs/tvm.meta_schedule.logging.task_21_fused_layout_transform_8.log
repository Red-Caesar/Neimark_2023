2023-02-16 14:18:37 [INFO] [task_scheduler.cc:158] Initializing Task #21: "fused_layout_transform_8"
2023-02-16 14:18:37 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 8, 56, 56, 32), "float32"], T_layout_trans: T.Buffer[(1, 32, 56, 56, 8), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        for i0, i1, i2, i3, i4 in T.grid(1, 32, 56, 56, 8):
            with T.block("T_layout_trans"):
                ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[ax0, (ax1 * 8 + ax4) // 32, ax2, ax3, (ax1 * 8 + ax4) % 32])
                T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 8 + ax4 < 256 and ax2 < 56 and ax3 < 56, p0[ax0, (ax1 * 8 + ax4) // 32, ax2, ax3, (ax1 * 8 + ax4) % 32], T.float32(0), dtype="float32")
    

2023-02-16 14:18:37 [INFO] [task_scheduler.cc:162] Total 1 design space(s) generated
2023-02-16 14:18:37 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 8, 56, 56, 32), "float32"], T_layout_trans: T.Buffer[(1, 32, 56, 56, 8), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.vectorize":64})
            for i0, i1, i2, i3, i4 in T.grid(1, 32, 56, 56, 8):
                with T.block("T_layout_trans"):
                    ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(p0[ax0, (ax1 * 8 + ax4) // 32, ax2, ax3, (ax1 * 8 + ax4) % 32])
                    T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                    T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 8 + ax4 < 256 and ax2 < 56 and ax3 < 56, p0[ax0, (ax1 * 8 + ax4) // 32, ax2, ax3, (ax1 * 8 + ax4) % 32], T.float32(0), dtype="float32")
    

b0 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.vectorize", ann_val=64)
2023-02-16 14:20:37 [INFO] [task_scheduler.cc:158] Initializing Task #21: "fused_layout_transform_8"
2023-02-16 14:20:37 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 8, 56, 56, 32), "float32"], T_layout_trans: T.Buffer[(1, 32, 56, 56, 8), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        for i0, i1, i2, i3, i4 in T.grid(1, 32, 56, 56, 8):
            with T.block("T_layout_trans"):
                ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[ax0, (ax1 * 8 + ax4) // 32, ax2, ax3, (ax1 * 8 + ax4) % 32])
                T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 8 + ax4 < 256 and ax2 < 56 and ax3 < 56, p0[ax0, (ax1 * 8 + ax4) // 32, ax2, ax3, (ax1 * 8 + ax4) % 32], T.float32(0), dtype="float32")
    

2023-02-16 14:20:37 [INFO] [task_scheduler.cc:162] Total 1 design space(s) generated
2023-02-16 14:20:37 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 8, 56, 56, 32), "float32"], T_layout_trans: T.Buffer[(1, 32, 56, 56, 8), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.vectorize":64})
            for i0, i1, i2, i3, i4 in T.grid(1, 32, 56, 56, 8):
                with T.block("T_layout_trans"):
                    ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(p0[ax0, (ax1 * 8 + ax4) // 32, ax2, ax3, (ax1 * 8 + ax4) % 32])
                    T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                    T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 8 + ax4 < 256 and ax2 < 56 and ax3 < 56, p0[ax0, (ax1 * 8 + ax4) // 32, ax2, ax3, (ax1 * 8 + ax4) % 32], T.float32(0), dtype="float32")
    

b0 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.vectorize", ann_val=64)
2023-02-16 14:47:43 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-02-16 14:47:44 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2023-02-16 14:47:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x2f66f218)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x831efe8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x8336118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x358d9eb8)]: 0 failure(s)
2023-02-16 14:47:44 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2023-02-16 14:47:44 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x2f66f218)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x831efe8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x8336118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x358d9eb8)]: 0 failure(s)
2023-02-16 14:47:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x2f66f218)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x831efe8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x8336118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x358d9eb8)]: 0 failure(s)
2023-02-16 14:47:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x2f66f218)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x831efe8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x8336118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x358d9eb8)]: 0 failure(s)
2023-02-16 14:47:44 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x2f66f218)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x831efe8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x8336118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x358d9eb8)]: 0 failure(s)
2023-02-16 14:47:44 [INFO] [evolutionary_search.cc:649] Scores of the best 2 candidates:
[1 : 2]:	0.9467  0.9424
2023-02-16 14:47:44 [INFO] [evolutionary_search.cc:727] Got 2 candidate(s) with evolutionary search
2023-02-16 14:47:44 [INFO] [evolutionary_search.cc:730] Sending 2 candidates(s) for measurement
2023-02-16 15:36:25 [INFO] [task_scheduler.cc:129] [Task #21: fused_layout_transform_8] Trial #1: GFLOPs: 0.0000. Time: 139.7835 us. Best GFLOPs: 0.0000
2023-02-16 15:36:25 [INFO] [task_scheduler.cc:129] [Task #21: fused_layout_transform_8] Trial #2: GFLOPs: 0.0000. Time: 135.8760 us. Best GFLOPs: 0.0000
