2023-02-16 14:18:36 [INFO] [task_scheduler.cc:158] Initializing Task #3: "fused_nn_contrib_conv2d_NCHWc_1"
2023-02-16 14:18:36 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 28, 28, 512), "float32"], p1: T.Buffer[(16, 1, 1, 1, 512, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 16, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        for i0, i1, i2, i3, i4, i5, i6, i7 in T.grid(1, 16, 14, 14, 64, 512, 1, 1):
            with T.block("conv2d_NCHWc"):
                n, oc_chunk, oh, ow, oc_block, ic, kh, kw = T.axis.remap("SSSSSRRR", [i0, i1, i2, i3, i4, i5, i6, i7])
                T.reads(p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                with T.init():
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
    

2023-02-16 14:18:36 [INFO] [task_scheduler.cc:162] Total 3 design space(s) generated
2023-02-16 14:18:36 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 28, 28, 512), "float32"], p1: T.Buffer[(16, 1, 1, 1, 512, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 16, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":512, "meta_schedule.vectorize":64})
            conv2d_NCHWc_global = T.alloc_buffer([1, 16, 14, 14, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1 in T.grid(1, 2, 1, 1, 2, 1, 2, 1, 2, 8):
                for i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(16, 1, 1, 1, 2, 2, 1, 2, 32, 1, 1, 1, 2, 7, 7, 2):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(16, i1_0 * 8 + i1_1 * 4 + i1_2 * 2 + i1_3)
                        oh = T.axis.spatial(14, i2_0 * 14 + i2_1 * 14 + i2_2 * 7 + i2_3)
                        ow = T.axis.spatial(14, i3_0 * 14 + i3_1 * 7 + i3_2 * 7 + i3_3)
                        oc_block = T.axis.spatial(64, i4_0 * 32 + i4_1 * 4 + i4_2 * 2 + i4_3)
                        ic = T.axis.reduce(512, i5_0 * 32 + i5_1)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                        T.writes(conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 4, 14, 7, 4):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(1, ax0)
                        v1 = T.axis.spatial(16, i1_0 * 8 + i1_1 * 4 + ax1)
                        v2 = T.axis.spatial(14, ax2)
                        v3 = T.axis.spatial(14, i3_1 * 7 + ax3)
                        v4 = T.axis.spatial(64, i4_0 * 32 + i4_1 * 4 + ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 2, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 8, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[16, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2023-02-16 14:18:36 [INFO] [task_scheduler.cc:168] Design space #1:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 28, 28, 512), "float32"], p1: T.Buffer[(16, 1, 1, 1, 512, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 16, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":64, "meta_schedule.vectorize":64})
            conv2d_NCHWc_global = T.alloc_buffer([1, 16, 14, 14, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0 in T.grid(1, 2, 1, 1, 2):
                for i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 2, 1, 2, 8, 16, 1, 1, 1, 2, 2, 1, 2, 32, 1, 1, 1, 2, 7, 7, 2):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(16, i1_0 * 8 + i1_1 * 4 + i1_2 * 2 + i1_3)
                        oh = T.axis.spatial(14, i2_0 * 14 + i2_1 * 14 + i2_2 * 7 + i2_3)
                        ow = T.axis.spatial(14, i3_0 * 14 + i3_1 * 7 + i3_2 * 7 + i3_3)
                        oc_block = T.axis.spatial(64, i4_0 * 32 + i4_1 * 4 + i4_2 * 2 + i4_3)
                        ic = T.axis.reduce(512, i5_0 * 32 + i5_1)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                        T.writes(conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 8, 14, 14, 32):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(1, ax0)
                        v1 = T.axis.spatial(16, i1_0 * 8 + ax1)
                        v2, v3 = T.axis.remap("SS", [ax2, ax3])
                        v4 = T.axis.spatial(64, i4_0 * 32 + ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 2, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 8, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[16, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2023-02-16 14:18:36 [INFO] [task_scheduler.cc:168] Design space #2:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 28, 28, 512), "float32"], p1: T.Buffer[(16, 1, 1, 1, 512, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 16, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":512, "meta_schedule.vectorize":64})
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 2, 1, 1, 2, 1, 2, 1, 2, 8, 16, 1, 1, 1, 2, 2, 1, 2, 32, 1, 1, 1, 2, 7, 7, 2):
                with T.block("conv2d_NCHWc"):
                    n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                    oc_chunk = T.axis.spatial(16, i1_0 * 8 + i1_1 * 4 + i1_2 * 2 + i1_3)
                    oh = T.axis.spatial(14, i2_0 * 14 + i2_1 * 14 + i2_2 * 7 + i2_3)
                    ow = T.axis.spatial(14, i3_0 * 14 + i3_1 * 7 + i3_2 * 7 + i3_3)
                    oc_block = T.axis.spatial(64, i4_0 * 32 + i4_1 * 4 + i4_2 * 2 + i4_3)
                    ic = T.axis.reduce(512, i5_0 * 32 + i5_1)
                    kh = T.axis.reduce(1, i6_0 + i6_1)
                    kw = T.axis.reduce(1, i7_1 + i7_0)
                    T.reads(p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                    T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                    T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 2, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 8, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[16, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2023-02-16 14:20:36 [INFO] [task_scheduler.cc:158] Initializing Task #3: "fused_nn_contrib_conv2d_NCHWc_1"
2023-02-16 14:20:36 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 28, 28, 512), "float32"], p1: T.Buffer[(16, 1, 1, 1, 512, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 16, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        for i0, i1, i2, i3, i4, i5, i6, i7 in T.grid(1, 16, 14, 14, 64, 512, 1, 1):
            with T.block("conv2d_NCHWc"):
                n, oc_chunk, oh, ow, oc_block, ic, kh, kw = T.axis.remap("SSSSSRRR", [i0, i1, i2, i3, i4, i5, i6, i7])
                T.reads(p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                with T.init():
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
    

2023-02-16 14:20:36 [INFO] [task_scheduler.cc:162] Total 3 design space(s) generated
2023-02-16 14:20:36 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 28, 28, 512), "float32"], p1: T.Buffer[(16, 1, 1, 1, 512, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 16, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":16, "meta_schedule.vectorize":64})
            conv2d_NCHWc_global = T.alloc_buffer([1, 16, 14, 14, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1 in T.grid(1, 2, 14, 1, 1, 1, 1, 1, 14, 32):
                for i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(512, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 2):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(16, i1_0 * 8 + i1_1 * 8 + i1_2 * 4 + i1_3)
                        oh = T.axis.spatial(14, i2_2 + i2_3 + i2_0 + i2_1)
                        ow = T.axis.spatial(14, i3_3 + i3_0 * 14 + i3_1 + i3_2)
                        oc_block = T.axis.spatial(64, i4_0 * 64 + i4_1 * 2 + i4_2 * 2 + i4_3)
                        ic = T.axis.reduce(512, i5_1 + i5_0)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                        T.writes(conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 8, 1, 1, 2):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(1, ax0)
                        v1 = T.axis.spatial(16, i1_0 * 8 + ax1)
                        v2 = T.axis.spatial(14, i2_0 + ax2)
                        v3 = T.axis.spatial(14, i3_1 + ax3)
                        v4 = T.axis.spatial(64, i4_1 * 2 + ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 2, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 32, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[512, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2023-02-16 14:20:36 [INFO] [task_scheduler.cc:168] Design space #1:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 28, 28, 512), "float32"], p1: T.Buffer[(16, 1, 1, 1, 512, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 16, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":0, "meta_schedule.vectorize":64})
            conv2d_NCHWc_global = T.alloc_buffer([1, 16, 14, 14, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0 in T.grid(1, 2, 14, 1, 1):
                for i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 1, 1, 14, 32, 512, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 2):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(16, i1_0 * 8 + i1_1 * 8 + i1_2 * 4 + i1_3)
                        oh = T.axis.spatial(14, i2_2 + i2_3 + i2_0 + i2_1)
                        ow = T.axis.spatial(14, i3_3 + i3_0 * 14 + i3_1 + i3_2)
                        oc_block = T.axis.spatial(64, i4_0 * 64 + i4_1 * 2 + i4_2 * 2 + i4_3)
                        ic = T.axis.reduce(512, i5_1 + i5_0)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                        T.writes(conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc_global[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 8, 1, 14, 64):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(1, ax0)
                        v1 = T.axis.spatial(16, i1_0 * 8 + ax1)
                        v2 = T.axis.spatial(14, i2_0 + ax2)
                        v3, v4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 2, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 32, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[512, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2023-02-16 14:20:36 [INFO] [task_scheduler.cc:168] Design space #2:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 1, 28, 28, 512), "float32"], p1: T.Buffer[(16, 1, 1, 1, 512, 64), "float32"], conv2d_NCHWc: T.Buffer[(1, 16, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":512, "meta_schedule.vectorize":64})
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 2, 14, 1, 1, 1, 1, 1, 14, 32, 512, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 2):
                with T.block("conv2d_NCHWc"):
                    n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                    oc_chunk = T.axis.spatial(16, i1_0 * 8 + i1_1 * 8 + i1_2 * 4 + i1_3)
                    oh = T.axis.spatial(14, i2_2 + i2_3 + i2_0 + i2_1)
                    ow = T.axis.spatial(14, i3_3 + i3_0 * 14 + i3_1 + i3_2)
                    oc_block = T.axis.spatial(64, i4_0 * 64 + i4_1 * 2 + i4_2 * 2 + i4_3)
                    ic = T.axis.reduce(512, i5_1 + i5_0)
                    kh = T.axis.reduce(1, i6_0 + i6_1)
                    kw = T.axis.reduce(1, i7_1 + i7_0)
                    T.reads(p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                    T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                    T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh * 2 + kh, ow * 2 + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 2, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 32, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[512, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2023-02-16 14:23:05 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-02-16 14:23:05 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2023-02-16 14:23:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x27660058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1fdf1468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2093e958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2a2b8308)]: 0 failure(s)
2023-02-16 14:23:06 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2023-02-16 14:23:07 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x27660058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1fdf1468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2093e958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2a2b8308)]: 0 failure(s)
2023-02-16 14:23:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x27660058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1fdf1468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2093e958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2a2b8308)]: 0 failure(s)
2023-02-16 14:23:08 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x27660058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1fdf1468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2093e958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2a2b8308)]: 0 failure(s)
2023-02-16 14:23:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x27660058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1fdf1468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2093e958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2a2b8308)]: 0 failure(s)
2023-02-16 14:23:09 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9985  0.9984  0.9984  0.9979  0.9975  0.9974  0.9971  0.9968  0.9963  0.9959  0.9956  0.9951  0.9950  0.9949  0.9948
[17 : 32]:	0.9948  0.9948  0.9942  0.9940  0.9939  0.9937  0.9935  0.9926  0.9926  0.9925  0.9924  0.9922  0.9909  0.9904  0.9901  0.9889
[33 : 48]:	0.9883  0.9881  0.9871  0.9868  0.9868  0.9864  0.9862  0.9862  0.9859  0.9857  0.9850  0.9847  0.9835  0.9835  0.9831  0.9829
[49 : 64]:	0.9828  0.9826  0.9821  0.9812  0.9812  0.9811  0.9797  0.9792  0.9783  0.9783  0.9777  0.9777  0.9769  0.9767  0.9753  0.9752
2023-02-16 14:23:09 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2023-02-16 14:23:09 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #1: GFLOPs: 20.8123. Time: 9874.9698 us. Best GFLOPs: 20.8123
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #2: GFLOPs: 8.7522. Time: 23482.1761 us. Best GFLOPs: 20.8123
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #3: GFLOPs: 18.3084. Time: 11225.5028 us. Best GFLOPs: 20.8123
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #4: GFLOPs: 85.9911. Time: 2390.0240 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #5: GFLOPs: 13.9530. Time: 14729.5461 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #6: GFLOPs: 18.0919. Time: 11359.8012 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #7: GFLOPs: 23.1411. Time: 8881.2127 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #8: GFLOPs: 9.0546. Time: 22697.9937 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #9: GFLOPs: 18.2229. Time: 11278.1720 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #10: GFLOPs: 40.4290. Time: 5083.4998 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #11: GFLOPs: 20.8408. Time: 9861.4616 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #12: GFLOPs: 40.2106. Time: 5111.1069 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #13: GFLOPs: 23.1781. Time: 8867.0344 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #14: GFLOPs: 8.9889. Time: 22863.9086 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #15: GFLOPs: 41.5079. Time: 4951.3688 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #16: GFLOPs: 43.3437. Time: 4741.6536 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #17: GFLOPs: 12.7798. Time: 16081.6611 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #18: GFLOPs: 55.5905. Time: 3697.0475 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #19: GFLOPs: 15.2594. Time: 13468.4646 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #20: GFLOPs: 23.1141. Time: 8891.5757 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #21: GFLOPs: 40.1784. Time: 5115.2080 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #22: GFLOPs: 16.8453. Time: 12200.4895 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #23: GFLOPs: 66.9530. Time: 3069.6307 us. Best GFLOPs: 85.9911
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #24: GFLOPs: 176.7002. Time: 1163.1053 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #25: GFLOPs: 23.8603. Time: 8613.4913 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #26: GFLOPs: 125.2777. Time: 1640.5222 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #27: GFLOPs: 20.7384. Time: 9910.1731 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #28: GFLOPs: 111.9184. Time: 1836.3451 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #29: GFLOPs: 40.6658. Time: 5053.8999 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #30: GFLOPs: 16.9379. Time: 12133.7921 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #31: GFLOPs: 17.7760. Time: 11561.7354 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #32: GFLOPs: 25.3241. Time: 8115.6380 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #33: GFLOPs: 54.6751. Time: 3758.9506 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #34: GFLOPs: 10.3886. Time: 19783.2597 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #35: GFLOPs: 20.3065. Time: 10120.9378 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #36: GFLOPs: 111.5367. Time: 1842.6298 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #37: GFLOPs: 12.9431. Time: 15878.8134 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #38: GFLOPs: 39.6984. Time: 5177.0544 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #39: GFLOPs: 27.9927. Time: 7341.9482 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #40: GFLOPs: 16.9803. Time: 12103.4991 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #41: GFLOPs: 1.5623. Time: 131547.2593 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #42: GFLOPs: 36.5003. Time: 5630.6662 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #43: GFLOPs: 38.3946. Time: 5352.8588 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #44: GFLOPs: 121.3119. Time: 1694.1524 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #45: GFLOPs: 36.0937. Time: 5694.0901 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #46: GFLOPs: 15.3946. Time: 13350.1568 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #47: GFLOPs: 7.3103. Time: 28113.7046 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #48: GFLOPs: 48.2934. Time: 4255.6710 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #49: GFLOPs: 16.1919. Time: 12692.8289 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #50: GFLOPs: 56.8253. Time: 3616.7120 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #51: GFLOPs: 54.6899. Time: 3757.9328 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #52: GFLOPs: 53.2289. Time: 3861.0784 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #53: GFLOPs: 62.8896. Time: 3267.9643 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #54: GFLOPs: 90.1774. Time: 2279.0722 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #55: GFLOPs: 7.4440. Time: 27609.0040 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #56: GFLOPs: 79.5489. Time: 2583.5805 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #57: GFLOPs: 32.3767. Time: 6347.8061 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #58: GFLOPs: 73.0460. Time: 2813.5830 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #59: GFLOPs: 54.9684. Time: 3738.8922 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #60: GFLOPs: 7.1715. Time: 28657.8860 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #61: GFLOPs: 20.3477. Time: 10100.4626 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #62: GFLOPs: 56.5809. Time: 3632.3401 us. Best GFLOPs: 176.7002
2023-02-16 15:36:11 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #63: GFLOPs: 36.4532. Time: 5637.9421 us. Best GFLOPs: 176.7002
2023-02-16 16:31:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-02-16 16:31:14 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2023-02-16 16:31:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x27660058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1fdf1468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2093e958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2a2b8308)]: 0 failure(s)
2023-02-16 16:31:15 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2023-02-16 16:31:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x27660058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1fdf1468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2093e958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2a2b8308)]: 0 failure(s)
2023-02-16 16:31:18 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x27660058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1fdf1468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2093e958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2a2b8308)]: 0 failure(s)
2023-02-16 16:31:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x27660058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1fdf1468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2093e958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2a2b8308)]: 0 failure(s)
2023-02-16 16:31:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x27660058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1fdf1468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2093e958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x2a2b8308)]: 0 failure(s)
2023-02-16 16:31:24 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9558  0.8487  0.8302  0.8302  0.8276  0.8199  0.8167  0.8122  0.7962  0.7874  0.7749  0.7709  0.7613  0.7577  0.7563  0.7547
[17 : 32]:	0.7504  0.7498  0.7473  0.7452  0.7398  0.7398  0.7344  0.7343  0.7337  0.7327  0.7313  0.7299  0.7292  0.7264  0.7264  0.7263
[33 : 48]:	0.7243  0.7224  0.7207  0.7199  0.7192  0.7183  0.7183  0.7174  0.7171  0.7171  0.7170  0.7170  0.7132  0.7127  0.7090  0.7085
[49 : 64]:	0.7084  0.7073  0.7061  0.7061  0.7031  0.7025  0.7025  0.7022  0.7009  0.7009  0.7009  0.7007  0.6989  0.6989  0.6975  0.6963
2023-02-16 16:31:24 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2023-02-16 16:31:24 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #64: GFLOPs: 127.3058. Time: 1614.3872 us. Best GFLOPs: 176.7002
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #65: GFLOPs: 148.3034. Time: 1385.8142 us. Best GFLOPs: 176.7002
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #66: GFLOPs: 172.6812. Time: 1190.1750 us. Best GFLOPs: 176.7002
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #67: GFLOPs: 187.5614. Time: 1095.7528 us. Best GFLOPs: 187.5614
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #68: GFLOPs: 183.1687. Time: 1122.0305 us. Best GFLOPs: 187.5614
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #69: GFLOPs: 130.3048. Time: 1577.2323 us. Best GFLOPs: 187.5614
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #70: GFLOPs: 161.9426. Time: 1269.0973 us. Best GFLOPs: 187.5614
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #71: GFLOPs: 138.7220. Time: 1481.5304 us. Best GFLOPs: 187.5614
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #72: GFLOPs: 135.7693. Time: 1513.7514 us. Best GFLOPs: 187.5614
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #73: GFLOPs: 186.8423. Time: 1099.9696 us. Best GFLOPs: 187.5614
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #74: GFLOPs: 230.1174. Time: 893.1134 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #75: GFLOPs: 81.4316. Time: 2523.8458 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #76: GFLOPs: 215.3459. Time: 954.3759 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #77: GFLOPs: 132.2121. Time: 1554.4782 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #78: GFLOPs: 113.1368. Time: 1816.5695 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #79: GFLOPs: 129.6895. Time: 1584.7153 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #80: GFLOPs: 159.0199. Time: 1292.4225 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #81: GFLOPs: 125.8462. Time: 1633.1114 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #82: GFLOPs: 142.3076. Time: 1444.2017 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #83: GFLOPs: 151.9824. Time: 1352.2677 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #84: GFLOPs: 175.1472. Time: 1173.4181 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #85: GFLOPs: 189.1381. Time: 1086.6182 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #86: GFLOPs: 128.7967. Time: 1595.7004 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #87: GFLOPs: 192.8967. Time: 1065.4451 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #88: GFLOPs: 129.9418. Time: 1581.6376 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #89: GFLOPs: 114.5424. Time: 1794.2786 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #90: GFLOPs: 103.0334. Time: 1994.7026 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #91: GFLOPs: 146.9778. Time: 1398.3125 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #92: GFLOPs: 160.3349. Time: 1281.8223 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #93: GFLOPs: 76.9574. Time: 2670.5810 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #94: GFLOPs: 103.3424. Time: 1988.7375 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #95: GFLOPs: 129.6417. Time: 1585.2988 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #96: GFLOPs: 102.8921. Time: 1997.4413 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #97: GFLOPs: 189.8817. Time: 1082.3631 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #98: GFLOPs: 157.0073. Time: 1308.9896 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #99: GFLOPs: 102.0149. Time: 2014.6165 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #100: GFLOPs: 121.7158. Time: 1688.5311 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #101: GFLOPs: 156.9283. Time: 1309.6485 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #102: GFLOPs: 151.7841. Time: 1354.0343 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #103: GFLOPs: 76.7397. Time: 2678.1555 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #104: GFLOPs: 158.0732. Time: 1300.1629 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #105: GFLOPs: 174.6270. Time: 1176.9137 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #106: GFLOPs: 151.6821. Time: 1354.9454 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #107: GFLOPs: 160.3875. Time: 1281.4026 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #108: GFLOPs: 227.3148. Time: 904.1246 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #109: GFLOPs: 135.7320. Time: 1514.1663 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #110: GFLOPs: 108.5336. Time: 1893.6151 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #111: GFLOPs: 148.0634. Time: 1388.0598 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #112: GFLOPs: 70.1199. Time: 2930.9916 us. Best GFLOPs: 230.1174
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #113: GFLOPs: 241.9677. Time: 849.3731 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #114: GFLOPs: 108.5943. Time: 1892.5563 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #115: GFLOPs: 90.0291. Time: 2282.8280 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #116: GFLOPs: 188.0110. Time: 1093.1322 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #117: GFLOPs: 88.3674. Time: 2325.7535 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #118: GFLOPs: 73.1232. Time: 2810.6120 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #119: GFLOPs: 140.1536. Time: 1466.3979 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #120: GFLOPs: 121.4974. Time: 1691.5659 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #121: GFLOPs: 85.2914. Time: 2409.6310 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #122: GFLOPs: 125.5767. Time: 1636.6161 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #123: GFLOPs: 155.6674. Time: 1320.2564 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #124: GFLOPs: 119.7929. Time: 1715.6344 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #125: GFLOPs: 32.4177. Time: 6339.7805 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #126: GFLOPs: 98.5990. Time: 2084.4120 us. Best GFLOPs: 241.9677
2023-02-16 16:33:35 [INFO] [task_scheduler.cc:129] [Task #3: fused_nn_contrib_conv2d_NCHWc_1] Trial #127: GFLOPs: 24.3319. Time: 8446.5766 us. Best GFLOPs: 241.9677
