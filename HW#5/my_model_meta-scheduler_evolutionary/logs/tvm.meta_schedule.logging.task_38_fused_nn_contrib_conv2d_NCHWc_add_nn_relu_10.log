2023-02-16 14:18:37 [INFO] [task_scheduler.cc:158] Initializing Task #38: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10"
2023-02-16 14:18:37 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 2, 14, 14, 512), "float32"], p1: T.Buffer[(4, 2, 1, 1, 512, 64), "float32"], p2: T.Buffer[(1, 4, 1, 1, 64), "float32"], T_relu: T.Buffer[(1, 4, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        conv2d_NCHWc = T.alloc_buffer([1, 4, 14, 14, 64], dtype="float32")
        T_add = T.alloc_buffer([1, 4, 14, 14, 64], dtype="float32")
        for i0, i1, i2, i3, i4, i5, i6, i7 in T.grid(1, 4, 14, 14, 64, 1024, 1, 1):
            with T.block("conv2d_NCHWc"):
                n, oc_chunk, oh, ow, oc_block, ic, kh, kw = T.axis.remap("SSSSSRRR", [i0, i1, i2, i3, i4, i5, i6, i7])
                T.reads(p0[n, ic // 512, oh + kh, ow + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                with T.init():
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh + kh, ow + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
        for i0, i1, i2, i3, i4 in T.grid(1, 4, 14, 14, 64):
            with T.block("T_add"):
                ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4], p2[ax0, ax1, 0, 0, ax4])
                T.writes(T_add[ax0, ax1, ax2, ax3, ax4])
                T_add[ax0, ax1, ax2, ax3, ax4] = conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + p2[ax0, ax1, 0, 0, ax4]
        for i0, i1, i2, i3, i4 in T.grid(1, 4, 14, 14, 64):
            with T.block("T_relu"):
                ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(T_add[ax0, ax1, ax2, ax3, ax4])
                T.writes(T_relu[ax0, ax1, ax2, ax3, ax4])
                T_relu[ax0, ax1, ax2, ax3, ax4] = T.max(T_add[ax0, ax1, ax2, ax3, ax4], T.float32(0))
    

2023-02-16 14:18:37 [INFO] [task_scheduler.cc:162] Total 3 design space(s) generated
2023-02-16 14:18:37 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 2, 14, 14, 512), "float32"], p1: T.Buffer[(4, 2, 1, 1, 512, 64), "float32"], p2: T.Buffer[(1, 4, 1, 1, 64), "float32"], T_relu: T.Buffer[(1, 4, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":0, "meta_schedule.vectorize":64})
            conv2d_NCHWc = T.alloc_buffer([1, 4, 14, 14, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 1, 1, 1, 16, 1, 1, 14, 1, 1, 64, 1, 1, 1, 2, 1, 2, 1, 16, 1, 1, 1, 2, 1, 7, 4):
                with T.block("conv2d_NCHWc"):
                    n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                    oc_chunk = T.axis.spatial(4, i1_0 * 4 + i1_1 * 4 + i1_2 * 2 + i1_3)
                    oh = T.axis.spatial(14, i2_0 * 14 + i2_1 + i2_2 + i2_3)
                    ow = T.axis.spatial(14, i3_0 * 14 + i3_1 * 14 + i3_2 * 7 + i3_3)
                    oc_block = T.axis.spatial(64, i4_0 * 4 + i4_1 * 4 + i4_2 * 4 + i4_3)
                    ic = T.axis.reduce(1024, i5_0 * 16 + i5_1)
                    kh = T.axis.reduce(1, i6_0 + i6_1)
                    kw = T.axis.reduce(1, i7_1 + i7_0)
                    T.reads(p0[n, ic // 512, oh + kh, ow + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                    T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                    T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh + kh, ow + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
            for i0, i1, i2, i3, i4 in T.grid(1, 4, 14, 14, 64):
                with T.block("T_relu"):
                    ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4], p2[ax0, ax1, 0, 0, ax4])
                    T.writes(T_relu[ax0, ax1, ax2, ax3, ax4])
                    T_relu[ax0, ax1, ax2, ax3, ax4] = T.max(conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + p2[ax0, ax1, 0, 0, ax4], T.float32(0))
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[16, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2023-02-16 14:18:37 [INFO] [task_scheduler.cc:168] Design space #1:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 2, 14, 14, 512), "float32"], p1: T.Buffer[(4, 2, 1, 1, 512, 64), "float32"], p2: T.Buffer[(1, 4, 1, 1, 64), "float32"], T_relu: T.Buffer[(1, 4, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":64, "meta_schedule.vectorize":64})
            conv2d_NCHWc = T.alloc_buffer([1, 4, 14, 14, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1 in T.grid(1, 1, 1, 1, 16, 1, 1, 14, 1, 1):
                for i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(64, 1, 1, 1, 2, 1, 2, 1, 16, 1, 1, 1, 2, 1, 7, 4):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(4, i1_0 * 4 + i1_1 * 4 + i1_2 * 2 + i1_3)
                        oh = T.axis.spatial(14, i2_0 * 14 + i2_1 + i2_2 + i2_3)
                        ow = T.axis.spatial(14, i3_0 * 14 + i3_1 * 14 + i3_2 * 7 + i3_3)
                        oc_block = T.axis.spatial(64, i4_0 * 4 + i4_1 * 4 + i4_2 * 4 + i4_3)
                        ic = T.axis.reduce(1024, i5_0 * 16 + i5_1)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 512, oh + kh, ow + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                        T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh + kh, ow + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 4, 1, 14, 4):
                    with T.block("T_relu"):
                        ax0_1, ax1_1 = T.axis.remap("SS", [ax0, ax1])
                        ax2_1 = T.axis.spatial(14, i2_1 + ax2)
                        ax3_1 = T.axis.spatial(14, ax3)
                        ax4_1 = T.axis.spatial(64, i4_0 * 4 + ax4)
                        T.reads(conv2d_NCHWc[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1], p2[ax0_1, ax1_1, 0, 0, ax4_1])
                        T.writes(T_relu[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1])
                        T_relu[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1] = T.max(conv2d_NCHWc[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1] + p2[ax0_1, ax1_1, 0, 0, ax4_1], T.float32(0))
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[16, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2023-02-16 14:18:37 [INFO] [task_scheduler.cc:168] Design space #2:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 2, 14, 14, 512), "float32"], p1: T.Buffer[(4, 2, 1, 1, 512, 64), "float32"], p2: T.Buffer[(1, 4, 1, 1, 64), "float32"], T_relu: T.Buffer[(1, 4, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":512, "meta_schedule.vectorize":64})
            conv2d_NCHWc = T.alloc_buffer([1, 4, 14, 14, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0 in T.grid(1, 1, 1, 1, 16):
                for i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 1, 14, 1, 1, 64, 1, 1, 1, 2, 1, 2, 1, 16, 1, 1, 1, 2, 1, 7, 4):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(4, i1_0 * 4 + i1_1 * 4 + i1_2 * 2 + i1_3)
                        oh = T.axis.spatial(14, i2_0 * 14 + i2_1 + i2_2 + i2_3)
                        ow = T.axis.spatial(14, i3_0 * 14 + i3_1 * 14 + i3_2 * 7 + i3_3)
                        oc_block = T.axis.spatial(64, i4_0 * 4 + i4_1 * 4 + i4_2 * 4 + i4_3)
                        ic = T.axis.reduce(1024, i5_0 * 16 + i5_1)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 512, oh + kh, ow + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                        T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh + kh, ow + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 4, 14, 14, 4):
                    with T.block("T_relu"):
                        ax0_1, ax1_1, ax2_1, ax3_1 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                        ax4_1 = T.axis.spatial(64, i4_0 * 4 + ax4)
                        T.reads(conv2d_NCHWc[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1], p2[ax0_1, ax1_1, 0, 0, ax4_1])
                        T.writes(T_relu[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1])
                        T_relu[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1] = T.max(conv2d_NCHWc[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1] + p2[ax0_1, ax1_1, 0, 0, ax4_1], T.float32(0))
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[16, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2023-02-16 14:20:38 [INFO] [task_scheduler.cc:158] Initializing Task #38: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10"
2023-02-16 14:20:38 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 2, 14, 14, 512), "float32"], p1: T.Buffer[(4, 2, 1, 1, 512, 64), "float32"], p2: T.Buffer[(1, 4, 1, 1, 64), "float32"], T_relu: T.Buffer[(1, 4, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        conv2d_NCHWc = T.alloc_buffer([1, 4, 14, 14, 64], dtype="float32")
        T_add = T.alloc_buffer([1, 4, 14, 14, 64], dtype="float32")
        for i0, i1, i2, i3, i4, i5, i6, i7 in T.grid(1, 4, 14, 14, 64, 1024, 1, 1):
            with T.block("conv2d_NCHWc"):
                n, oc_chunk, oh, ow, oc_block, ic, kh, kw = T.axis.remap("SSSSSRRR", [i0, i1, i2, i3, i4, i5, i6, i7])
                T.reads(p0[n, ic // 512, oh + kh, ow + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                with T.init():
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh + kh, ow + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
        for i0, i1, i2, i3, i4 in T.grid(1, 4, 14, 14, 64):
            with T.block("T_add"):
                ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4], p2[ax0, ax1, 0, 0, ax4])
                T.writes(T_add[ax0, ax1, ax2, ax3, ax4])
                T_add[ax0, ax1, ax2, ax3, ax4] = conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + p2[ax0, ax1, 0, 0, ax4]
        for i0, i1, i2, i3, i4 in T.grid(1, 4, 14, 14, 64):
            with T.block("T_relu"):
                ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(T_add[ax0, ax1, ax2, ax3, ax4])
                T.writes(T_relu[ax0, ax1, ax2, ax3, ax4])
                T_relu[ax0, ax1, ax2, ax3, ax4] = T.max(T_add[ax0, ax1, ax2, ax3, ax4], T.float32(0))
    

2023-02-16 14:20:38 [INFO] [task_scheduler.cc:162] Total 3 design space(s) generated
2023-02-16 14:20:38 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 2, 14, 14, 512), "float32"], p1: T.Buffer[(4, 2, 1, 1, 512, 64), "float32"], p2: T.Buffer[(1, 4, 1, 1, 64), "float32"], T_relu: T.Buffer[(1, 4, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":16, "meta_schedule.vectorize":64})
            conv2d_NCHWc = T.alloc_buffer([1, 4, 14, 14, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 128, 1, 1, 1, 1, 7, 1, 4, 8, 1, 1, 1, 4, 2, 7, 8):
                with T.block("conv2d_NCHWc"):
                    n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                    oc_chunk = T.axis.spatial(4, i1_0 * 4 + i1_1 * 4 + i1_2 * 4 + i1_3)
                    oh = T.axis.spatial(14, i2_0 * 14 + i2_1 * 14 + i2_2 * 2 + i2_3)
                    ow = T.axis.spatial(14, i3_0 * 14 + i3_1 * 7 + i3_2 * 7 + i3_3)
                    oc_block = T.axis.spatial(64, i4_0 * 32 + i4_1 * 32 + i4_2 * 8 + i4_3)
                    ic = T.axis.reduce(1024, i5_0 * 8 + i5_1)
                    kh = T.axis.reduce(1, i6_0 + i6_1)
                    kw = T.axis.reduce(1, i7_1 + i7_0)
                    T.reads(p0[n, ic // 512, oh + kh, ow + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                    T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                    T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                    conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh + kh, ow + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
            for i0, i1, i2, i3, i4 in T.grid(1, 4, 14, 14, 64):
                with T.block("T_relu"):
                    ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4], p2[ax0, ax1, 0, 0, ax4])
                    T.writes(T_relu[ax0, ax1, ax2, ax3, ax4])
                    T_relu[ax0, ax1, ax2, ax3, ax4] = T.max(conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + p2[ax0, ax1, 0, 0, ax4], T.float32(0))
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 4, 8])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[128, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2023-02-16 14:20:38 [INFO] [task_scheduler.cc:168] Design space #1:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 2, 14, 14, 512), "float32"], p1: T.Buffer[(4, 2, 1, 1, 512, 64), "float32"], p2: T.Buffer[(1, 4, 1, 1, 64), "float32"], T_relu: T.Buffer[(1, 4, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":16, "meta_schedule.vectorize":64})
            conv2d_NCHWc = T.alloc_buffer([1, 4, 14, 14, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0, i0_1, i1_1, i2_1, i3_1, i4_1 in T.grid(1, 1, 1, 1, 2, 1, 1, 1, 2, 1):
                for i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(128, 1, 1, 1, 1, 7, 1, 4, 8, 1, 1, 1, 4, 2, 7, 8):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(4, i1_0 * 4 + i1_1 * 4 + i1_2 * 4 + i1_3)
                        oh = T.axis.spatial(14, i2_0 * 14 + i2_1 * 14 + i2_2 * 2 + i2_3)
                        ow = T.axis.spatial(14, i3_0 * 14 + i3_1 * 7 + i3_2 * 7 + i3_3)
                        oc_block = T.axis.spatial(64, i4_0 * 32 + i4_1 * 32 + i4_2 * 8 + i4_3)
                        ic = T.axis.reduce(1024, i5_0 * 8 + i5_1)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 512, oh + kh, ow + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                        T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh + kh, ow + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 4, 14, 7, 32):
                    with T.block("T_relu"):
                        ax0_1, ax1_1, ax2_1 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        ax3_1 = T.axis.spatial(14, i3_1 * 7 + ax3)
                        ax4_1 = T.axis.spatial(64, i4_0 * 32 + ax4)
                        T.reads(conv2d_NCHWc[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1], p2[ax0_1, ax1_1, 0, 0, ax4_1])
                        T.writes(T_relu[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1])
                        T_relu[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1] = T.max(conv2d_NCHWc[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1] + p2[ax0_1, ax1_1, 0, 0, ax4_1], T.float32(0))
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 4, 8])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[128, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2023-02-16 14:20:38 [INFO] [task_scheduler.cc:168] Design space #2:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 2, 14, 14, 512), "float32"], p1: T.Buffer[(4, 2, 1, 1, 512, 64), "float32"], p2: T.Buffer[(1, 4, 1, 1, 64), "float32"], T_relu: T.Buffer[(1, 4, 14, 14, 64), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.unroll_explicit":512, "meta_schedule.vectorize":64})
            conv2d_NCHWc = T.alloc_buffer([1, 4, 14, 14, 64], dtype="float32")
            for i0_0, i1_0, i2_0, i3_0, i4_0 in T.grid(1, 1, 1, 1, 2):
                for i0_1, i1_1, i2_1, i3_1, i4_1, i5_0, i6_0, i7_0, i0_2, i1_2, i2_2, i3_2, i4_2, i5_1, i6_1, i7_1, i0_3, i1_3, i2_3, i3_3, i4_3 in T.grid(1, 1, 1, 2, 1, 128, 1, 1, 1, 1, 7, 1, 4, 8, 1, 1, 1, 4, 2, 7, 8):
                    with T.block("conv2d_NCHWc"):
                        n = T.axis.spatial(1, i0_0 + i0_1 + i0_2 + i0_3)
                        oc_chunk = T.axis.spatial(4, i1_0 * 4 + i1_1 * 4 + i1_2 * 4 + i1_3)
                        oh = T.axis.spatial(14, i2_0 * 14 + i2_1 * 14 + i2_2 * 2 + i2_3)
                        ow = T.axis.spatial(14, i3_0 * 14 + i3_1 * 7 + i3_2 * 7 + i3_3)
                        oc_block = T.axis.spatial(64, i4_0 * 32 + i4_1 * 32 + i4_2 * 8 + i4_3)
                        ic = T.axis.reduce(1024, i5_0 * 8 + i5_1)
                        kh = T.axis.reduce(1, i6_0 + i6_1)
                        kw = T.axis.reduce(1, i7_1 + i7_0)
                        T.reads(p0[n, ic // 512, oh + kh, ow + kw, ic % 512], p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block])
                        T.writes(conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block])
                        T.block_attr({"meta_schedule.tiling_structure":"SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = T.float32(0)
                        conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] = conv2d_NCHWc[n, oc_chunk, oh, ow, oc_block] + p0[n, ic // 512, oh + kh, ow + kw, ic % 512] * p1[oc_chunk, ic // 512, kh, kw, ic % 512, oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(1, 4, 14, 14, 32):
                    with T.block("T_relu"):
                        ax0_1, ax1_1, ax2_1, ax3_1 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                        ax4_1 = T.axis.spatial(64, i4_0 * 32 + ax4)
                        T.reads(conv2d_NCHWc[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1], p2[ax0_1, ax1_1, 0, 0, ax4_1])
                        T.writes(T_relu[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1])
                        T_relu[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1] = T.max(conv2d_NCHWc[ax0_1, ax1_1, ax2_1, ax3_1, ax4_1] + p2[ax0_1, ax1_1, 0, 0, ax4_1], T.float32(0))
    

b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 4, 8])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[128, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2023-02-16 15:10:24 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-02-16 15:10:24 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2023-02-16 15:10:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e9fed8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1f95ff18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2ec3ac88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x220ed848)]: 0 failure(s)
2023-02-16 15:10:25 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2023-02-16 15:10:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e9fed8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1f95ff18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2ec3ac88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x220ed848)]: 0 failure(s)
2023-02-16 15:10:27 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e9fed8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1f95ff18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2ec3ac88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x220ed848)]: 0 failure(s)
2023-02-16 15:10:27 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e9fed8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1f95ff18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2ec3ac88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x220ed848)]: 0 failure(s)
2023-02-16 15:10:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e9fed8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1f95ff18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2ec3ac88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x220ed848)]: 0 failure(s)
2023-02-16 15:10:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9994  0.9978  0.9970  0.9967  0.9958  0.9958  0.9957  0.9945  0.9940  0.9939  0.9939  0.9934  0.9932  0.9924  0.9923
[17 : 32]:	0.9921  0.9919  0.9916  0.9905  0.9901  0.9899  0.9898  0.9896  0.9894  0.9880  0.9874  0.9871  0.9867  0.9860  0.9854  0.9848
[33 : 48]:	0.9846  0.9843  0.9841  0.9841  0.9809  0.9807  0.9800  0.9797  0.9797  0.9796  0.9794  0.9788  0.9777  0.9776  0.9775  0.9774
[49 : 64]:	0.9772  0.9763  0.9760  0.9758  0.9756  0.9755  0.9746  0.9742  0.9731  0.9723  0.9721  0.9720  0.9719  0.9718  0.9718  0.9715
2023-02-16 15:10:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2023-02-16 15:10:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #1: GFLOPs: 122.1440. Time: 842.1272 us. Best GFLOPs: 122.1440
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #2: GFLOPs: 16.5285. Time: 6223.2358 us. Best GFLOPs: 122.1440
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #3: GFLOPs: 151.9834. Time: 676.7895 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #4: GFLOPs: 125.3860. Time: 820.3530 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #5: GFLOPs: 42.9845. Time: 2392.9765 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #6: GFLOPs: 48.1583. Time: 2135.8907 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #7: GFLOPs: 18.5019. Time: 5559.4663 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #8: GFLOPs: 53.4556. Time: 1924.2286 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #9: GFLOPs: 7.5566. Time: 13612.1224 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #10: GFLOPs: 37.3004. Time: 2757.6314 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #11: GFLOPs: 41.8013. Time: 2460.7110 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #12: GFLOPs: 9.9295. Time: 10359.1343 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #13: GFLOPs: 122.4618. Time: 839.9418 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #14: GFLOPs: 78.7079. Time: 1306.8681 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #15: GFLOPs: 11.5301. Time: 8921.0430 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #16: GFLOPs: 126.8751. Time: 810.7250 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #17: GFLOPs: 25.1959. Time: 4082.4384 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #18: GFLOPs: 42.1188. Time: 2442.1596 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #19: GFLOPs: 31.5430. Time: 3260.9738 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #20: GFLOPs: 18.8673. Time: 5451.8166 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #21: GFLOPs: 59.5353. Time: 1727.7277 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #22: GFLOPs: 35.6098. Time: 2888.5572 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #23: GFLOPs: 80.5364. Time: 1277.1966 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #24: GFLOPs: 70.4809. Time: 1459.4141 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #25: GFLOPs: 5.7058. Time: 18027.3004 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #26: GFLOPs: 73.3909. Time: 1401.5467 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #27: GFLOPs: 20.9914. Time: 4900.1369 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #28: GFLOPs: 56.0235. Time: 1836.0279 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #29: GFLOPs: 33.5446. Time: 3066.3891 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #30: GFLOPs: 92.7962. Time: 1108.4591 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #31: GFLOPs: 107.4449. Time: 957.3353 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #32: GFLOPs: 46.0935. Time: 2231.5688 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #33: GFLOPs: 18.9833. Time: 5418.4801 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #34: GFLOPs: 119.3018. Time: 862.1901 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #35: GFLOPs: 117.0173. Time: 879.0222 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #36: GFLOPs: 96.3075. Time: 1068.0453 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #37: GFLOPs: 11.4516. Time: 8982.2594 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #38: GFLOPs: 40.1082. Time: 2564.5823 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #39: GFLOPs: 15.7442. Time: 6533.2532 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #40: GFLOPs: 46.9539. Time: 2190.6749 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #41: GFLOPs: 55.5597. Time: 1851.3578 us. Best GFLOPs: 151.9834
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #42: GFLOPs: 156.2170. Time: 658.4484 us. Best GFLOPs: 156.2170
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #43: GFLOPs: 215.0587. Time: 478.2917 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #44: GFLOPs: 32.7871. Time: 3137.2345 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #45: GFLOPs: 4.7741. Time: 21545.4552 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #46: GFLOPs: 16.4069. Time: 6269.3563 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #47: GFLOPs: 175.2817. Time: 586.8313 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #48: GFLOPs: 51.0381. Time: 2015.3746 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #49: GFLOPs: 26.3637. Time: 3901.6079 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #50: GFLOPs: 30.4977. Time: 3372.7440 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #51: GFLOPs: 57.6184. Time: 1785.2070 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #52: GFLOPs: 5.4139. Time: 18999.2157 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #53: GFLOPs: 43.9294. Time: 2341.5038 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #54: GFLOPs: 73.1896. Time: 1405.4017 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #55: GFLOPs: 33.5515. Time: 3065.7547 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #56: GFLOPs: 6.1285. Time: 16784.0851 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #57: GFLOPs: 20.2389. Time: 5082.3245 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #58: GFLOPs: 183.9130. Time: 559.2904 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #59: GFLOPs: 27.2759. Time: 3771.1198 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #60: GFLOPs: 34.1744. Time: 3009.8777 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #61: GFLOPs: 131.4587. Time: 782.4570 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #62: GFLOPs: 69.4065. Time: 1482.0050 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #63: GFLOPs: 22.1053. Time: 4653.2130 us. Best GFLOPs: 215.0587
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #64: GFLOPs: 10.9265. Time: 9413.8463 us. Best GFLOPs: 215.0587
2023-02-16 15:52:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-02-16 15:52:03 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2023-02-16 15:52:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e9fed8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1f95ff18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2ec3ac88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x220ed848)]: 0 failure(s)
2023-02-16 15:52:04 [INFO] [evolutionary_search.cc:723] Sampled 448 candidate(s)
2023-02-16 15:52:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e9fed8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1f95ff18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2ec3ac88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x220ed848)]: 0 failure(s)
2023-02-16 15:52:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e9fed8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1f95ff18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2ec3ac88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x220ed848)]: 0 failure(s)
2023-02-16 15:52:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e9fed8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1f95ff18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2ec3ac88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x220ed848)]: 0 failure(s)
2023-02-16 15:52:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e9fed8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x1f95ff18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2ec3ac88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x220ed848)]: 0 failure(s)
2023-02-16 15:52:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9811  0.9586  0.9586  0.9435  0.9259  0.9108  0.9017  0.8881  0.8881  0.8785  0.8785  0.8784  0.8633  0.8633  0.8571  0.8571
[17 : 32]:	0.8554  0.8492  0.8398  0.8369  0.8319  0.8277  0.8275  0.8275  0.8147  0.8064  0.8045  0.8040  0.7986  0.7986  0.7979  0.7975
[33 : 48]:	0.7966  0.7947  0.7935  0.7934  0.7907  0.7859  0.7822  0.7788  0.7779  0.7756  0.7756  0.7748  0.7728  0.7721  0.7719  0.7716
[49 : 64]:	0.7666  0.7659  0.7642  0.7631  0.7631  0.7631  0.7620  0.7605  0.7593  0.7580  0.7579  0.7555  0.7550  0.7534  0.7514  0.7500
2023-02-16 15:52:13 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2023-02-16 15:52:13 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #65: GFLOPs: 208.5572. Time: 493.2019 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #66: GFLOPs: 69.7268. Time: 1475.1975 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #67: GFLOPs: 115.9206. Time: 887.3384 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #68: GFLOPs: 112.2087. Time: 916.6915 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #69: GFLOPs: 152.1266. Time: 676.1527 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #70: GFLOPs: 85.1804. Time: 1207.5639 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #71: GFLOPs: 112.2357. Time: 916.4717 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #72: GFLOPs: 175.1439. Time: 587.2932 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #73: GFLOPs: 172.3058. Time: 596.9666 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #74: GFLOPs: 154.9941. Time: 663.6433 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #75: GFLOPs: 155.4110. Time: 661.8630 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #76: GFLOPs: 154.5894. Time: 665.3806 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #77: GFLOPs: 162.4971. Time: 633.0010 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #78: GFLOPs: 161.6183. Time: 636.4426 us. Best GFLOPs: 215.0587
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #79: GFLOPs: 252.1553. Time: 407.9263 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #80: GFLOPs: 222.9850. Time: 461.2902 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #81: GFLOPs: 98.0617. Time: 1048.9401 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #82: GFLOPs: 229.5731. Time: 448.0526 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #83: GFLOPs: 141.4756. Time: 727.0568 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #84: GFLOPs: 107.7459. Time: 954.6613 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #85: GFLOPs: 106.0659. Time: 969.7817 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #86: GFLOPs: 209.2574. Time: 491.5515 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #87: GFLOPs: 246.2313. Time: 417.7406 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #88: GFLOPs: 125.8231. Time: 817.5033 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #89: GFLOPs: 174.0645. Time: 590.9351 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #90: GFLOPs: 99.5081. Time: 1033.6929 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #91: GFLOPs: 174.9843. Time: 587.8287 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #92: GFLOPs: 175.7969. Time: 585.1116 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #93: GFLOPs: 107.7775. Time: 954.3811 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #94: GFLOPs: 105.1310. Time: 978.4057 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #95: GFLOPs: 112.4252. Time: 914.9265 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #96: GFLOPs: 202.6097. Time: 507.6795 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #97: GFLOPs: 108.0776. Time: 951.7311 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #98: GFLOPs: 195.0031. Time: 527.4829 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #99: GFLOPs: 98.7339. Time: 1041.7983 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #100: GFLOPs: 123.0790. Time: 835.7299 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #101: GFLOPs: 114.4442. Time: 898.7859 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #102: GFLOPs: 159.0803. Time: 646.5967 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #103: GFLOPs: 93.6545. Time: 1098.3009 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #104: GFLOPs: 215.0295. Time: 478.3567 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #105: GFLOPs: 149.0936. Time: 689.9073 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #106: GFLOPs: 177.5198. Time: 579.4327 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #107: GFLOPs: 171.3560. Time: 600.2756 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #108: GFLOPs: 214.7000. Time: 479.0908 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #109: GFLOPs: 182.7200. Time: 562.9423 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #110: GFLOPs: 98.5317. Time: 1043.9360 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #111: GFLOPs: 117.2103. Time: 877.5745 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #112: GFLOPs: 90.2805. Time: 1139.3474 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #113: GFLOPs: 150.5848. Time: 683.0758 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #114: GFLOPs: 153.2822. Time: 671.0551 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #115: GFLOPs: 122.2652. Time: 841.2924 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #116: GFLOPs: 43.8707. Time: 2344.6361 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #117: GFLOPs: 42.7993. Time: 2403.3304 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #118: GFLOPs: 220.0927. Time: 467.3522 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #119: GFLOPs: 151.1672. Time: 680.4441 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #120: GFLOPs: 88.9554. Time: 1156.3194 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #121: GFLOPs: 212.9096. Time: 483.1197 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #122: GFLOPs: 124.2188. Time: 828.0616 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #123: GFLOPs: 124.6836. Time: 824.9744 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #124: GFLOPs: 112.1979. Time: 916.7799 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #125: GFLOPs: 133.0732. Time: 772.9639 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #126: GFLOPs: 81.7508. Time: 1258.2244 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #127: GFLOPs: 40.0205. Time: 2570.2058 us. Best GFLOPs: 252.1553
2023-02-16 15:54:17 [INFO] [task_scheduler.cc:129] [Task #38: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #128: GFLOPs: 27.8350. Time: 3695.3744 us. Best GFLOPs: 252.1553
