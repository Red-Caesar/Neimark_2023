2023-02-16 14:18:37 [INFO] [task_scheduler.cc:158] Initializing Task #39: "fused_layout_transform_14"
2023-02-16 14:18:37 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 4, 14, 14, 64), "float32"], T_layout_trans: T.Buffer[(1, 2, 14, 14, 128), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        for i0, i1, i2, i3, i4 in T.grid(1, 2, 14, 14, 128):
            with T.block("T_layout_trans"):
                ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[ax0, ax1 * 2 + ax4 // 64, ax2, ax3, ax4 % 64])
                T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 2 + ax4 // 64 < 4 and ax2 < 14 and ax3 < 14, p0[ax0, ax1 * 2 + ax4 // 64, ax2, ax3, ax4 % 64], T.float32(0), dtype="float32")
    

2023-02-16 14:18:37 [INFO] [task_scheduler.cc:162] Total 1 design space(s) generated
2023-02-16 14:18:37 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 4, 14, 14, 64), "float32"], T_layout_trans: T.Buffer[(1, 2, 14, 14, 128), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.vectorize":64})
            for i0, i1, i2, i3, i4 in T.grid(1, 2, 14, 14, 128):
                with T.block("T_layout_trans"):
                    ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(p0[ax0, ax1 * 2 + ax4 // 64, ax2, ax3, ax4 % 64])
                    T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                    T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 2 + ax4 // 64 < 4 and ax2 < 14 and ax3 < 14, p0[ax0, ax1 * 2 + ax4 // 64, ax2, ax3, ax4 % 64], T.float32(0), dtype="float32")
    

b0 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.vectorize", ann_val=64)
2023-02-16 14:20:38 [INFO] [task_scheduler.cc:158] Initializing Task #39: "fused_layout_transform_14"
2023-02-16 14:20:38 [INFO] [task_scheduler.cc:35] 
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 4, 14, 14, 64), "float32"], T_layout_trans: T.Buffer[(1, 2, 14, 14, 128), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        # with T.block("root")
        for i0, i1, i2, i3, i4 in T.grid(1, 2, 14, 14, 128):
            with T.block("T_layout_trans"):
                ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[ax0, ax1 * 2 + ax4 // 64, ax2, ax3, ax4 % 64])
                T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 2 + ax4 // 64 < 4 and ax2 < 14 and ax3 < 14, p0[ax0, ax1 * 2 + ax4 // 64, ax2, ax3, ax4 % 64], T.float32(0), dtype="float32")
    

2023-02-16 14:20:38 [INFO] [task_scheduler.cc:162] Total 1 design space(s) generated
2023-02-16 14:20:38 [INFO] [task_scheduler.cc:168] Design space #0:
# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer[(1, 4, 14, 14, 64), "float32"], T_layout_trans: T.Buffer[(1, 2, 14, 14, 128), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # body
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel":96, "meta_schedule.vectorize":64})
            for i0, i1, i2, i3, i4 in T.grid(1, 2, 14, 14, 128):
                with T.block("T_layout_trans"):
                    ax0, ax1, ax2, ax3, ax4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(p0[ax0, ax1 * 2 + ax4 // 64, ax2, ax3, ax4 % 64])
                    T.writes(T_layout_trans[ax0, ax1, ax2, ax3, ax4])
                    T_layout_trans[ax0, ax1, ax2, ax3, ax4] = T.if_then_else(ax0 < 1 and ax1 * 2 + ax4 // 64 < 4 and ax2 < 14 and ax3 < 14, p0[ax0, ax1 * 2 + ax4 // 64, ax2, ax3, ax4 % 64], T.float32(0), dtype="float32")
    

b0 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.vectorize", ann_val=64)
2023-02-16 15:12:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-02-16 15:12:38 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2023-02-16 15:12:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x32b84e18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x35960e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2760eb08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33f5478)]: 0 failure(s)
2023-02-16 15:12:38 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2023-02-16 15:12:38 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x32b84e18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x35960e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2760eb08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33f5478)]: 0 failure(s)
2023-02-16 15:12:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x32b84e18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x35960e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2760eb08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33f5478)]: 0 failure(s)
2023-02-16 15:12:38 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x32b84e18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x35960e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2760eb08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33f5478)]: 0 failure(s)
2023-02-16 15:12:38 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x32b84e18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x35960e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x2760eb08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33f5478)]: 0 failure(s)
2023-02-16 15:12:39 [INFO] [evolutionary_search.cc:649] Scores of the best 3 candidates:
[1 : 3]:	0.7703  0.4579  0.0527
2023-02-16 15:12:39 [INFO] [evolutionary_search.cc:727] Got 3 candidate(s) with evolutionary search
2023-02-16 15:12:39 [INFO] [evolutionary_search.cc:730] Sending 3 candidates(s) for measurement
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #39: fused_layout_transform_14] Trial #1: GFLOPs: 0.0000. Time: 45.2504 us. Best GFLOPs: 0.0000
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #39: fused_layout_transform_14] Trial #2: GFLOPs: 0.0001. Time: 13.4411 us. Best GFLOPs: 0.0001
2023-02-16 15:36:36 [INFO] [task_scheduler.cc:129] [Task #39: fused_layout_transform_14] Trial #3: GFLOPs: 0.0001. Time: 12.6243 us. Best GFLOPs: 0.0001
